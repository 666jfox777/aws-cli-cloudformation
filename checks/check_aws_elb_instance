#!/bin/bash
# ./check_aws_elb_instance
# ------------------------
# Checks a named AWS ELB if the EC2 instance running the check is in the ELB.
# This should be run using NRPE, aka Nagios remote execution.


EC2_INSTANCE_ID="`curl -s http://169.254.169.254/latest/meta-data/instance-id`"
EC2_AVAIL_ZONE="`curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone`"
EC2_REGION="`echo \"$EC2_AVAIL_ZONE\" | sed -e 's:\([0-9][0-9]*\)[a-z]*\$:\\1:'`"

while getopts "k:s:r:n:i:h" arg; do
  case $arg in
    k)
      export AWS_ACCESS_KEY_ID=$OPTARG
      ;;
    s)
      export AWS_SECRET_ACCESS_KEY=$OPTARG
      ;;
    r)
      EC2_REGION=$OPTARG
      ;;
    i)
      EC2_INSTANCE_ID=$OPTARG
      ;;
    n)
      NAME=$OPTARG
      ;;
    h)
      echo "Usage: $0 -k <AWS-AccessKeyId> -s <AWS-SecretKey> -r <AWS-Region> -i <AWS-ID> -n <LB_NAME>"
      exit 99
      ;;
  esac
done

CMD="/usr/bin/aws elb describe-instance-health"
OPT="--region ${EC2_REGION} --load-balancer-name ${NAME} --instances ${EC2_INSTANCE_ID}"

JSON=$(${CMD} ${OPT})

if [ $? -eq 0 ]; then
  IN_SERVICE_COUNT=$(echo ${JSON} | jq -c '.InstanceStates[].State' | grep InService |wc -l)
  TOTAL_COUNT=$(echo ${JSON} | jq -c '.InstanceStates[].State' | wc -l)
  if [ ${IN_SERVICE_COUNT} -eq 0 ]; then
    NAGIOS_STATE=CRITICAL
    EXIT_CODE=2
  elif [ ${TOTAL_COUNT} -eq ${IN_SERVICE_COUNT} ]; then
    NAGIOS_STATE=OK
    EXIT_CODE=0
  elif [ ${IN_SERVICE_COUNT} -lt ${TOTAL_COUNT} ]; then
    NAGIOS_STATE=WARNING
    EXIT_CODE=1
  fi
  echo "${NAGIOS_STATE}: ELB:${NAME} Total:${TOTAL_COUNT} Healthy:${IN_SERVICE_COUNT}"
else
  echo "Failed to retrieve ELB Instances health from AWS"
  EXIT_CODE=99
fi

exit ${EXIT_CODE}
