#! /bin/sh
# 0 Success
# 1 Warning
# 2 Critical
# 3+ Unknown

# Container for return code:
ALERT=0

# Timestamp Now
CURRENT=$(date '+%s')

# 2d wanring, 7d crit
WARNING=172800
CRITICAL=604800

# Get AWS Defaults:
EC2_INSTANCE_ID="`curl -s http://169.254.169.254/latest/meta-data/instance-id`"
EC2_AVAIL_ZONE="`curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone`"
EC2_REGION="`echo \"$EC2_AVAIL_ZONE\" | sed -e 's:\([0-9][0-9]*\)[a-z]*\$:\\1:'`"

# Get options:
while getopts "k:s:r:n:i:h" arg; do
  case $arg in
    k)
      export AWS_ACCESS_KEY_ID=$OPTARG
      ;;
    s)
      export AWS_SECRET_ACCESS_KEY=$OPTARG
      ;;
    r)
      EC2_REGION=$OPTARG
      ;;
    i)
      EC2_INSTANCE_ID=$OPTARG
      ;;
    w)
      WARNING=$OPTARG
      ;;
    c)
      CRITICAL=$OPTARG
      ;;
    h)
      echo "Usage: $0 [-k <AWS-AccessKeyId>] [-s <AWS-SecretKey>] [-r <AWS-Region>] [-i <AWS-ID>]"
      exit 99
      ;;
  esac
done
# Get EC2 Instance(s) Info
PART1CMD="/usr/bin/aws ec2 describe-instances"
PART1OPT="--instance-ids ${EC2_INSTANCE_ID} --region ${EC2_REGION}"
PART1JSON=$(${PART1CMD} ${PART1OPT})

# Get a List of VolumeIds
VOLIDS=$(echo ${PART1JSON} | jq -c '.Reservations[].Instances[].BlockDeviceMappings[].Ebs.VolumeId')

if [ -z "$VOLIDS" ]; then
    echo "Critical: No EBS volumes found."
    ALERT=2
else

for VOLID in $VOLIDS
do
# Get EBS Snapshot Info
PART2CMD="/usr/bin/aws ec2 describe-snapshots"
PART2OPT="--filters Name=volume-id,Values=$VOLID --region ${EC2_REGION}"
PART2JSON=$(${PART2CMD} ${PART2OPT})
COMPLETE=$(echo ${PART2JSON} | jq -c '.Snapshots[].StartTime')

if [ -z "$COMPLETE" ]; then
    echo "Critical: No snapshots found."
    ALERT=2
else

COMPLETE=`echo ${COMPLETE[@]} | awk 'BEGIN{RS=" ";} {print $1}' | sort -r`

I=0

for t in $COMPLETE
do

if [[ I -lt 1 ]]
then
I=I+1
a=${t/\"/}
b=${a/\"/}
c=${b/Z/}
d=${c/T/ }
TIME=$(date -d "${d}" +%s)
DIFFERENCE=`expr $CURRENT - $TIME`

if [[ $DIFFERENCE -gt $CRITICAL ]]
then
if [[ $ALERT -lt 2 ]]
then
ALERT=2
fi
echo "Critical: No snapshots within a week time period $VOLID."
fi

if [[ $DIFFERENCE -gt $WARNING ]]
then
if [[ $ALERT -lt 1 ]]
then
ALERT=1
fi
echo "Warning: No snapshots within two days $VOLID."
fi
fi
done
fi
done
fi
if [[ $ALERT -eq 0 ]]
then
echo "Success: All is well."
fi
exit ${ALERT}
